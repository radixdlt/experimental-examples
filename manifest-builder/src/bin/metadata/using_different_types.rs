use manifest_builder_examples::*;
use scrypto::prelude::*;
use std::array::from_fn;
use transaction::builder::*;

/// An example manifest that shows how different metadata value types can be used with the manifest
/// builder.
fn main() {
    // An allocator that we will use to create new _example_ addresses for the purposes of this
    // example. Addresses generated by the allocator do not exist on any network.
    let mut allocator = Allocator::default();

    // The address of the resource that we will perform the metadata operations on.
    let resource_address = allocator.new_fungible_resource_address();

    // The address of the owner badge of the resource. This is required to allow us to update the
    // metadata on it.
    let admin_badge = allocator.new_fungible_resource_address();

    // The address of the account that holds the admin badge.
    let admin_badge_holder = allocator.new_account_address();

    // Constructing a manifest that establishes a two-way link between the resource and the dApp
    // definition.
    let manifest = ManifestBuilder::new()
        // Assuming that the account that holds the admin badge is also the fee payer, we lock fees
        // from that account. We're locking 10 XRD so that we have more than enough to do what we
        // need.
        .lock_fee(admin_badge_holder, 10)
        // Creating a proof of the owner badge, required for permission to update the metadata on
        // the resource.
        .create_proof_from_account_of_amount(admin_badge_holder, admin_badge, 1)
        // String Example
        .set_metadata(resource_address, "some_field_name", "string_metadata_value")
        // Bool Example
        .set_metadata(resource_address, "some_field_name", true)
        // U8 Example
        .set_metadata(resource_address, "some_field_name", 100u8)
        // U32 Example
        .set_metadata(resource_address, "some_field_name", 100u32)
        // U64 Example
        .set_metadata(resource_address, "some_field_name", 100u64)
        // I32 Example
        .set_metadata(resource_address, "some_field_name", 100i32)
        // I64 Example
        .set_metadata(resource_address, "some_field_name", 100i64)
        // Decimal Example
        .set_metadata(resource_address, "some_field_name", dec!(100))
        // Global Address Example
        .set_metadata(resource_address, "some_field_name", resource_address)
        // Public Key Example
        .set_metadata(
            resource_address,
            "some_field_name",
            PublicKey::from(Secp256k1PrivateKey::from_u64(1).unwrap().public_key()),
        )
        // Public Key Hash Example
        .set_metadata(
            resource_address,
            "some_field_name",
            PublicKeyHash::from(
                Secp256k1PrivateKey::from_u64(1)
                    .unwrap()
                    .public_key()
                    .get_hash(),
            ),
        )
        // Non-fungible Local Id Example
        .set_metadata(
            resource_address,
            "some_field_name",
            NonFungibleLocalId::integer(1),
        )
        // Non-fungible Global Id Example
        .set_metadata(
            resource_address,
            "some_field_name",
            NonFungibleGlobalId::new(
                allocator.new_non_fungible_resource_address(),
                NonFungibleLocalId::integer(1),
            ),
        )
        // Instant example
        .set_metadata(resource_address, "some_field_name", Instant::new(0))
        // Url example
        .set_metadata(
            resource_address,
            "some_field_name",
            Url::of("https://www.example.com"),
        )
        // Origin example
        .set_metadata(
            resource_address,
            "some_field_name",
            Url::of("https://www.example.com"),
        )
        // String Array Example
        .set_metadata(
            resource_address,
            "some_field_name",
            ["string_metadata_value", "string_other_metadata_value"],
        )
        // Bool Array Example
        .set_metadata(resource_address, "some_field_name", [true, false])
        // U8 Array Example
        .set_metadata(resource_address, "some_field_name", [0u8, 1u8])
        // U32 Array Example
        .set_metadata(resource_address, "some_field_name", [0u32, 1u32])
        // U64 Array Example
        .set_metadata(resource_address, "some_field_name", [0u64, 1u64])
        // i32 Array Example
        .set_metadata(resource_address, "some_field_name", [0i32, 1i32])
        // i64 Array Example
        .set_metadata(resource_address, "some_field_name", [0i64, 1i64])
        // Decimal Array Example
        .set_metadata(resource_address, "some_field_name", [dec!(0), dec!(1)])
        // GlobalAddress Array Example
        .set_metadata(
            resource_address,
            "some_field_name",
            from_fn::<_, 10, _>(|_| allocator.new_account_address()),
        )
        // PublicKey Array Example
        .set_metadata(
            resource_address,
            "some_field_name",
            from_fn::<_, 10, _>(|i| Secp256k1PrivateKey::from_u64(i as u64 + 1).unwrap())
                .map(|private_key| private_key.public_key())
                .map(PublicKey::from),
        )
        // PublicKeyHash Array Example
        .set_metadata(
            resource_address,
            "some_field_name",
            from_fn::<_, 10, _>(|i| Secp256k1PrivateKey::from_u64(i as u64 + 1).unwrap())
                .map(|private_key| private_key.public_key())
                .map(PublicKey::from)
                .map(|key| key.get_hash()),
        )
        // NonFungibleLocalId Array Example
        .set_metadata(
            resource_address,
            "some_field_name",
            from_fn::<_, 10, _>(|i| NonFungibleLocalId::integer(i as u64)),
        )
        // NonFungibleGlobalId Array Example
        .set_metadata(
            resource_address,
            "some_field_name",
            from_fn::<_, 10, _>(|i| NonFungibleLocalId::integer(i as u64)).map(|id| {
                NonFungibleGlobalId::new(allocator.new_non_fungible_resource_address(), id)
            }),
        )
        // Instant Array Example
        .set_metadata(
            resource_address,
            "some_field_name",
            from_fn::<_, 10, _>(|i| Instant::new(i as i64)),
        )
        // Url Array Example
        .set_metadata(
            resource_address,
            "some_field_name",
            from_fn::<_, 10, _>(|_| Url::of("https://www.example.com/")),
        )
        // Origin Array Example
        .set_metadata(
            resource_address,
            "some_field_name",
            from_fn::<_, 10, _>(|_| Origin::of("https://www.example.com/")),
        )
        .build();

    // Validate the manifest and print it.
    validate_and_print(&manifest)
}
